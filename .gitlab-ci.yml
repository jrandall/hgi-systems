# This script excepts the following Secret Variables to be defined in
# Gitlab project settings:
#  ANSIBLE_VAULT_PASSWORD
#  SSH_PRIVATE_KEY (e.g. "-----BEGIN RSA PRIVATE KEY-----
#                         ...
#                         -----END RSA PRIVATE KEY-----)"
variables:
  GITHUB_REPO: "git@github.com:wtsi-hgi/hgi-systems.git"
  GITLAB_REPO: "git@gitlab.internal.sanger.ac.uk:hgi/hgi-systems.git"
  TF_LOG: "" # anything other than "" to trace

before_script:
  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_PRIVATE_KEY")

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

stages:
  - prepare
  - refresh
  - plan
  - apply
  - commit
  - sync

version:
  stage: prepare
  tags:
    - docker
  image: quay.io/wtsi-hgi/gitlab-ci-git-push
  script:
    - git describe --tags --dirty --always --abbrev=8 > version.txt
  artifacts:
    paths:
      - "version.txt"

terraform-validate-production:
  stage: prepare
  tags:
    - docker
  image: quay.io/wtsi-hgi/tao
  script:
    - cd terraform/production && terraform validate

openstack-vars-validate:
  stage: prepare
  tags:
    - docker
  image: quay.io/wtsi-hgi/gitlab-ci-git-push
  script:
    - 'test -n "${OS_AUTH_URL}" || (echo "OS_AUTH_URL must be set!"; exit 1)'
    - 'test -n "${OS_TENANT_NAME}" || test -n "${OS_TENANT_ID}" || (echo "OS_TENANT_NAME or OS_TENANT_ID must be set!"; exit 1)'
    - 'test -n "${OS_USERNAME}" || test -n "${OS_USERID}" || (echo "OS_USERNAME or OS_USERID must be set!"; exit 1)'
    - 'test -n "${OS_PASSWORD}" || (echo "OS_PASSWORD must be set!"; exit 1)'
    - '((echo "${OS_AUTH_URL}" | grep -q "v3") && (test -n "${OS_DOMAIN_NAME}" || test -n "${OS_DOMAIN_ID}" || echo "WARNING: OS_DOMAIN_ID or OS_DOMAIN_NAME not set")) || exit 0'

terraform-refresh-production:
  stage: refresh
  tags:
    - docker
  image: quay.io/wtsi-hgi/tao
  script:
    - cd terraform/production && terraform refresh -backup=- && (terraform show -no-color > terraform.tfstate.txt)
  artifacts:
    paths:
      - terraform/production/terraform.tfstate
      - terraform/production/terraform.tfstate.txt
    when: always

terraform-plan-production:
  stage: plan
  tags:
    - docker
  image: quay.io/wtsi-hgi/tao
  script:
    - cd terraform/production && (terraform graph > plan.dot) && (dot -Tpng < plan.dot > plan.png) && terraform plan -input=false -out plan && (terraform show -no-color plan > plan.txt)
  artifacts:
    paths:
      - terraform/production/plan.dot
      - terraform/production/plan.png
      - terraform/production/plan
      - terraform/production/plan.txt
  dependencies:
    - terraform-refresh-production

terraform-apply-production:
  stage: apply
  tags:
    - docker
  image: quay.io/wtsi-hgi/tao
  script:
    - cd terraform/production && (terraform graph plan > apply.dot) && (dot -Tpng < apply.dot > apply.png) && terraform apply -input=false plan && (terraform output -json > output.json) && (terraform show -no-color > terraform.tfstate.txt)
  artifacts:
    paths:
      - terraform/production/apply.dot
      - terraform/production/apply.png
      - terraform/production/terraform.tfstate
      - terraform/production/output.json
      - terraform/production/terraform.tfstate.txt
    when: always
  dependencies:
    - terraform-plan-production

tfstate-commit:
  stage: commit
  tags:
    - docker
  image: quay.io/wtsi-hgi/gitlab-ci-git-push
  script:
    - gitlab/commit-tfstate.sh "ci-tfstate-$(cat version.txt)" "Changes to terraform.tfstate made by terraform [ci skip]" "terraform/production/terraform.tfstate"
  dependencies:
    - terraform-apply-production
    - version
  when: always
  
github-sync:
  stage: sync
  tags:
    - docker
  image: quay.io/wtsi-hgi/gitlab-ci-git-push
  script:
    - git checkout origin/master && subrepos/gitlab-ci-git-push/git-push ${GITHUB_REPO} ${CI_BUILD_REF_NAME}
  dependencies: []