# Copyright (c) 2018 Genome Research Ltd.
#
# Author: Joshua C. Randall <jcrandall@alum.mit.edu>
#
# This file is part of hgi-systems.
#
# hgi-systems is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#
---
# file: docker-consul.yml

- import_playbook: hgi-preamble-playbook.yml

- hosts: docker-consul-servers, docker-consul-agents
  tasks:
    - name: apply docker role
      import_role:
        name: docker

    # When bootstrapping
    - name: add mercury to docker group
      become: yes
      user:
        name: mercury
        append: yes
        groups:
          - docker

- hosts: docker-consul-servers
  vars:
    docker_consul_PLAYBOOK_attached_volume_size_gb: "{{ tf_type_openstack_compute_instance_v2_GROUP_volume_size if tf_id is defined else openstack_instances_GROUP_volume_size }}"
    docker_consul_PLAYBOOK_attached_volume_device: "{{ tf_type_openstack_compute_instance_v2_GROUP_volume_device if tf_id is defined else openstack_instances_GROUP_volume_device }}"
    docker_consul_PLAYBOOK_server_data_mountpoint: "/mnt/{% if tf_id is defined %}{{ tf_type_openstack_compute_instance_v2_GROUP_volume_name }}{% else %}{{ openstack_instances_GROUP_volume_name }}{% endif %}"
    docker_consul_PLAYBOOK_created_restore_indicator_file: ".created-restore"
  tasks:
    - name: assert docker-consul-servers cannot also be consul-servers or consul-servers
      assert:
        that: 
          - "(not inventory_hostname in groups['consul-agents']) and 
             (not inventory_hostname in groups['consul-servers'])"
        msg: "docker-consul-servers must not also be consul-agents or consul-servers"

    - name: assert we are in the consul_credentials group
      assert:
        that:
          - "inventory_hostname in groups['consul-credentials']"
        msg: "docker-consul-servers must also be in group consul-credentials"

    - name: assert required vars defined in consul-credentials group
      assert:
        that: 
          - "{{ item }} is defined"
        msg: "{{ item }} must be defined in group consul-credentials"
      with_items:
        - consul_credentials_GROUP_encrypt
        - "consul_credentials_GROUP_creds['default'].token"
        - "consul_credentials_GROUP_creds['master'].token"
        - "consul_credentials_GROUP_creds['agent-master'].token"

    - name: assert we are in the s3_credentials group
      assert:
        that:
          - "inventory_hostname in groups['s3-credentials']"
        msg: "docker-consul-servers must also be in group s3-credentials"

    - name: assert required vars defined in s3-credentials group
      assert:
        that: 
          - "{{ item }} is defined"
        msg: "{{ item }} must be defined in group s3-credentials"
      with_items:
        - "s3_credentials['sanger-ceph-mercury']['s3_host']"
        - "s3_credentials['sanger-ceph-mercury']['s3_access_key']"
        - "s3_credentials['sanger-ceph-mercury']['s3_secret_key']"

    - name: assert we are a member of a docker-consul-cluster
      assert:
        that:
          - "docker_consul_cluster_SPECIFIC_GROUP_id is defined"
        msg: "docker-consul-servers must all be members of a docker-consul-cluster, which should define docker_consul_cluster_SPECIFIC_GROUP_id, but docker_consul_cluster_SPECIFIC_GROUP_id was not defined"

    - name: assert required vars defined in docker-consul-cluster-<docker_consul_cluster_SPECIFIC_GROUP_id>
      assert:
        that: 
          - "{{ item }} is defined"
        msg: "{{ item }} must be defined (probably in group docker-consul-cluster-{{ docker_consul_cluster_SPECIFIC_GROUP_id }}"
      with_items:
        - docker_consul_cluster_SPECIFIC_GROUP_retry_join
        - docker_consul_cluster_SPECIFIC_GROUP_recursors
        - docker_consul_cluster_SPECIFIC_GROUP_acl_datacenter
        - docker_consul_cluster_SPECIFIC_GROUP_datacenter

    - name: configure attached-openstack-volume for docker-consul-servers
      import_role:
        name: attached-openstack-volume
      vars:
        attached_openstack_volume_vg: consul-vg
        attached_openstack_volume_vols:
          - name: consul-data
            size: "{{ ((docker_consul_PLAYBOOK_attached_volume_size_gb | int) * 1024) - 4 }}M"
            fstype: xfs
            mountpoint: "{{ docker_consul_PLAYBOOK_server_data_mountpoint }}"
        attached_openstack_volumes:
          - device: "{{ docker_consul_PLAYBOOK_attached_volume_device }}"
        attached_openstack_volume_fs_create_indicator_file: "{{ docker_consul_PLAYBOOK_created_restore_indicator_file }}"

    - name: setup s3-backup
      import_role:
        name: s3-backup
      vars:
        s3_backup_source_dir: "{{ docker_consul_PLAYBOOK_server_data_mountpoint }}"
        s3_backup_dest_path: "consul/{{ cloud_resource_tenant }}/{{ cloud_resource_name }}{{ docker_consul_PLAYBOOK_server_data_mountpoint }}"
        s3_backup_s3_host: "{{ s3_credentials['sanger-ceph-mercury']['s3_host'] }}"
        s3_backup_s3_access_key: "{{ s3_credentials['sanger-ceph-mercury']['s3_access_key'] }}"
        s3_backup_s3_secret_key: "{{ s3_credentials['sanger-ceph-mercury']['s3_secret_key'] }}"
        s3_backup_s3_bucket: consul-backup

    - name: import docker-consul-server role
      import_role:
        name: docker-consul-server
      vars:
        ###############################################################################
        # Variables that have no defaults and must be set
        ###############################################################################
        docker_consul_server_retry_join: "{{ docker_consul_cluster_SPECIFIC_GROUP_retry_join }}" 
        docker_consul_server_retry_join_wan: "{{ docker_consul_cluster_SPECIFIC_GROUP_retry_join_wan }}"
        docker_consul_server_recursors:  "{{ docker_consul_cluster_SPECIFIC_GROUP_recursors }}"
        docker_consul_server_acl_datacenter:  "{{ docker_consul_cluster_SPECIFIC_GROUP_acl_datacenter }}"
        docker_consul_server_datacenter:  "{{ docker_consul_cluster_SPECIFIC_GROUP_datacenter }}"
        docker_consul_server_acl_token: "{{ consul_credentials_GROUP_creds['default'].token }}"
        docker_consul_server_acl_master_token: "{{ consul_credentials_GROUP_creds['master'].token }}"
        docker_consul_server_acl_agent_master_token: "{{ consul_credentials_GROUP_creds['agent-master'].token }}"
        docker_consul_server_encrypt:  "{{ consul_credentials_GROUP_encrypt }}"
        ###############################################################################
        # Directories
        ###############################################################################
        docker_consul_server_config_dir: /etc/docker-consul-server-config.d
        docker_consul_server_data_dir: "{{ docker_consul_PLAYBOOK_server_data_mountpoint }}/data"
        ###############################################################################
        # Defaults for consul agent config
        ###############################################################################
        docker_consul_server_bind_addr: "{{ cloud_resource_private_ip }}"
        docker_consul_server_advertise_addr: "{{ cloud_resource_private_ip }}"
        docker_consul_server_advertise_addr_wan: "{{ cloud_resource_public_ip }}"
        docker_consul_server_client_addr: 0.0.0.0
        docker_consul_server_bootstrap_expect: "{{ docker_consul_cluster_SPECIFIC_GROUP_server_count }}"
        ###############################################################################
        # Generic defaults
        ###############################################################################
        docker_consul_server_apt_cache_valid_time: "{{ all_GROUP_apt_cache_valid_time }}"

- hosts: docker-consul-agents
  tasks:
    - name: assert docker-consul-agents cannot also be consul-agents or consul-servers
      assert:
        that: 
          - "(not inventory_hostname in groups['consul-agents']) and 
             (not inventory_hostname in groups['consul-servers'])"
        msg: "docker-consul-agents must not also be consul-agents or consul-servers"

    - name: assert we are in the consul_credentials group
      assert:
        that:
          - "inventory_hostname in groups['consul-credentials']"
        msg: "docker-consul-agents must also be in group consul-credentials"

    - name: assert required vars defined in consul_credentials group
      assert:
        that: 
          - "{{ item }} is defined"
        msg: "{{ item }} must be defined in group consul-credentials"
      with_items:
        - "consul_credentials_GROUP_creds['agent'].token"
        - consul_credentials_GROUP_encrypt

    - name: assert we are a member of a docker-consul-cluster
      assert:
        that:
          - "docker_consul_cluster_SPECIFIC_GROUP_id is defined"
        msg: "docker-consul-agents must all be members of a docker-consul-cluster, which should define docker_consul_cluster_SPECIFIC_GROUP_id, but docker_consul_cluster_SPECIFIC_GROUP_id was not defined"

    - name: assert required vars defined in docker-consul-cluster-<docker_consul_cluster_SPECIFIC_GROUP_id>
      assert:
        that: 
          - "{{ item }} is defined"
        msg: "{{ item }} must be defined (probably in group docker-consul-cluster-{{ docker_consul_cluster_SPECIFIC_GROUP_id }}"
      with_items:
        - docker_consul_cluster_SPECIFIC_GROUP_retry_join
        - docker_consul_cluster_SPECIFIC_GROUP_recursors
        - docker_consul_cluster_SPECIFIC_GROUP_datacenter

    - name: import docker-consul-agent role
      import_role:
        name: docker-consul-agent
      vars:
        docker_consul_agent_retry_join: "{{ docker_consul_cluster_SPECIFIC_GROUP_retry_join }}" 
        docker_consul_agent_recursors:  "{{ docker_consul_cluster_SPECIFIC_GROUP_recursors }}"
        docker_consul_agent_acl_datacenter:  "{{ docker_consul_cluster_SPECIFIC_GROUP_acl_datacenter }}"
        docker_consul_agent_datacenter:  "{{ docker_consul_cluster_SPECIFIC_GROUP_datacenter }}"
        docker_consul_agent_acl_token:  "{{ consul_credentials_GROUP_creds['agent'].token }}"
        docker_consul_agent_encrypt:  "{{ consul_credentials_GROUP_encrypt }}"
        docker_consul_agent_config_dir: /etc/docker-consul-agent-config.d

- hosts: docker-consul-servers, docker-consul-agents
  vars:
    docker_consul_PLAYBOOK_consul_template_token_file: /etc/consul-template.token
  tasks:
    - name: assert we are in the consul_credentials group
      assert:
        that:
          - "inventory_hostname in groups['consul-credentials']"
        msg: "docker-consul-servers and docker-consul-agents must also be in group consul-credentials"

    - name: assert required vars defined in consul_credentials group
      assert:
        that: 
          - "{{ item }} is defined"
        msg: "{{ item }} must be defined in group consul-credentials"
      with_items:
        - "consul_credentials_GROUP_creds['consul-template'].token"

    - name: install consul token into consul_template_consul_token_file
      become: yes
      copy:
        dest: "{{ docker_consul_PLAYBOOK_consul_template_token_file }}"
        content: "{{ consul_credentials_GROUP_creds['consul-template'].token }}"
        mode: 0600

    - name: apply consul-template role
      import_role:
        name: consul-template
      vars:
        consul_template_user: mercury
        consul_template_consul_token_file: "{{ docker_consul_PLAYBOOK_consul_template_token_file }}"
