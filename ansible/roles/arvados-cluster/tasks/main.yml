# Copyright (c) 2017 Genome Research Ltd.
#
# Author: Joshua C. Randall <jcrandall@alum.mit.edu>
#
# This file is part of hgi-systems.
#
# hgi-systems is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#
---
# file: roles/arvados-cluster/tasks/main.yml

- name: create keep_service entries for keep hosts
  delegate_to: "{{ arvados_cluster_delegate }}"
  arvados_keep_service:
    api_host: "{{ arvados_cluster_api_host }}"
    api_token: "{{ arvados_cluster_superuser_api_token }}"
    service_host: "{{ item }}"
    service_type: blob
  with_items: "{{ arvados_cluster_keep_hosts }}"

- name: create keep_service entries for keep proxies
  delegate_to: "{{ arvados_cluster_delegate }}"
  arvados_keep_service:
    api_host: "{{ arvados_cluster_api_host }}"
    api_token: "{{ arvados_cluster_superuser_api_token }}"
    service_host: "{{ item }}"
    service_port: 443
    service_ssl_flag: True
    service_type: proxy
  with_items: "{{ arvados_cluster_keepproxy_hosts }}"

- name: create virtual_machine entries for shell hosts
  delegate_to: "{{ arvados_cluster_delegate }}"
  arvados_virtual_machine:
    api_host: "{{ arvados_cluster_api_host }}"
    api_token: "{{ arvados_cluster_superuser_api_token }}"
    uuid: "{{ arvados_cluster_id }}-2x53u-{{ item | hash('md5') | truncate(15, True, '') }}"
    hostname: "{{ item }}"
  with_items: "{{ arvados_cluster_shell_hosts }}"

- name: create node entries for compute nodes
  delegate_to: "{{ arvados_cluster_delegate }}"
  arvados_node:
    api_host: "{{ arvados_cluster_api_host }}"
    api_token: "{{ arvados_cluster_superuser_api_token }}"
    uuid: "{{ arvados_cluster_id }}-7ekkf-{{ item | hash('md5') | truncate(15, True, '') }}"
    hostname: "{{ item }}"
    domain: "{{ arvados_cluster_consul_domain }}"
    info:
      ping_secret: "{{ arvados_cluster_root_key | pbkdf2_hmac(item, 32) | b36encode }}"
    merge_info: true
  with_items: "{{ arvados_cluster_GROUP_compute_node_names }}"

- name: create api_client_authorization for anonymous user
  delegate_to: "{{ arvados_cluster_delegate }}"
  arvados_api_client_authorization:
    api_host: "{{ arvados_cluster_api_host }}"
    api_token: "{{ arvados_cluster_superuser_api_token }}"
    uuid: "{{ arvados_cluster_id }}-gj3su-{{ 'anonymous_api_client_authorization' | hash('md5') | truncate(15, True, '') }}"
    scopes:
      - "GET /"
    client_token: "{{ arvados_cluster_anonymous_api_token }}"

- name: create api_client_authorization for arvados-login-sync
  delegate_to: "{{ arvados_cluster_delegate }}"
  arvados_api_client_authorization:
    api_host: "{{ arvados_cluster_api_host }}"
    api_token: "{{ arvados_cluster_superuser_api_token }}"
    uuid: "{{ arvados_cluster_id }}-gj3su-{{ item | hash('md5') | truncate(15, True, '') }}"
    scopes:
      - "GET /arvados/v1/virtual_machines/{{ arvados_cluster_id }}-2x53u-{{ item | hash('md5') | truncate(15, True, '') }}/logins"
    client_token: "{{ arvados_cluster_root_key | pbkdf2_hmac(item, 32) | b36encode }}"
  with_items: "{{ arvados_cluster_shell_hosts }}"

- name: create api_client_authorization for data manager (keep-balance)
  delegate_to: "{{ arvados_cluster_delegate }}"
  arvados_api_client_authorization:
    api_host: "{{ arvados_cluster_api_host }}"
    api_token: "{{ arvados_cluster_superuser_api_token }}"
    uuid: "{{ arvados_cluster_id }}-gj3su-{{ 'data_manager_api_token' | hash('md5') | truncate(15, True, '') }}"
    scopes:
      - "all"
    client_token: "{{ arvados_cluster_data_manager_api_token }}"

- name: create arvados repository
  delegate_to: "{{ arvados_cluster_delegate }}"
  arvados_repository:
    api_host: "{{ arvados_cluster_api_host }}"
    api_token: "{{ arvados_cluster_superuser_api_token }}"
    uuid: "{{ arvados_cluster_id }}-s0uqq-{{ 'arvados_repo' | hash('md5') | truncate(15, True, '') }}"
    owner_uuid: "{{ arvados_cluster_id }}-tpzed-000000000000000"
    name: arvados

- name: make arvados repository readable by all users
  delegate_to: "{{ arvados_cluster_delegate }}"
  arvados_link:
    api_host: "{{ arvados_cluster_api_host }}"
    api_token: "{{ arvados_cluster_superuser_api_token }}"
    uuid: "{{ arvados_cluster_id }}-o0j2j-{{ 'arvados_repo' | hash('md5') | truncate(15, True, '') }}"
    head_uuid: "{{ arvados_cluster_id }}-s0uqq-{{ 'arvados_repo' | hash('md5') | truncate(15, True, '') }}"
    tail_uuid: "{{ arvados_cluster_id }}-j7d0g-fffffffffffffff"
    link_class: permission
    name: can_read

- name: check if arvados repository is empty
  delegate_to: "{{ arvados_cluster_delegate }}"
  command: git ls-remote https://{{ arvados_cluster_git_host }}/arvados.git
  environment:
    ARVADOS_API_TOKEN: "{{ arvados_cluster_superuser_api_token }}"
  register: arvados_cluster_git_ls_remote_arvados
  check_mode: no
  changed_when: false

- name: populate arvados repository when empty (clone from github)
  delegate_to: "{{ arvados_cluster_delegate }}"
  command: git clone --bare https://github.com/curoverse/arvados.git
  args:
    chdir: /tmp
  when: arvados_cluster_git_ls_remote_arvados.stdout == ""

- name: populate arvados repository when empty (push to arvados git)
  delegate_to: "{{ arvados_cluster_delegate }}"
  command: git --git-dir arvados.git push https://{{ arvados_cluster_git_host }}/arvados.git '*:*'
  args:
    chdir: /tmp
  environment:
    ARVADOS_API_TOKEN: "{{ arvados_cluster_superuser_api_token }}"
  when: arvados_cluster_git_ls_remote_arvados.stdout == ""

- name: create group to own docker images by default
  delegate_to: "{{ arvados_cluster_delegate }}"
  arvados_group:
    api_host: "{{ arvados_cluster_api_host }}"
    api_token: "{{ arvados_cluster_superuser_api_token }}"
    uuid: "{{ arvados_cluster_id }}-j7d0g-{{ 'arvados_docker_project' | hash('md5') | truncate(15, True, '') }}"
    owner_uuid: "{{ arvados_cluster_id }}-tpzed-000000000000000"
    name: "Arvados Standard Docker Images"

- name: make docker project readable by all users
  delegate_to: "{{ arvados_cluster_delegate }}"
  arvados_link:
    api_host: "{{ arvados_cluster_api_host }}"
    api_token: "{{ arvados_cluster_superuser_api_token }}"
    uuid: "{{ arvados_cluster_id }}-o0j2j-{{ 'arvados_docker_project_all_link' | hash('md5') | truncate(15, True, '') }}"
    head_uuid: "{{ arvados_cluster_id }}-j7d0g-{{ 'arvados_docker_project' | hash('md5') | truncate(15, True, '') }}"
    tail_uuid: "{{ arvados_cluster_id }}-j7d0g-fffffffffffffff"
    link_class: permission
    name: can_read

- name: download and tag the latest arvados/jobs docker image
  become: yes
  delegate_to: "{{ arvados_cluster_delegate }}"
  command: arv-keepdocker --pull arvados/jobs latest
  environment:
    ARVADOS_API_TOKEN: "{{ arvados_cluster_superuser_api_token }}"
    ARVADOS_API_HOST: "{{ arvados_cluster_api_host }}"
  register: arv_keepdocker_result
  changed_when: "not (arv_keepdocker_result.stdout | search('Status: Image is up to date'))"

- name: add authorized_key for mercury on shell node
  delegate_to: "{{ arvados_cluster_delegate }}"
  arvados_authorized_key:
    api_host: "{{ arvados_cluster_api_host }}"
    api_token: "{{ arvados_cluster_superuser_api_token }}"
    uuid: "{{ arvados_cluster_id }}-fngyi-{{ 'mercury_shell_authorized_key' | hash('md5') | truncate(15, True, '') }}"
    name: "mercury@shell"
    key_type: "SSH"
    authorized_user_uuid: mercury
    public_key: "{{ arvados_cluster_mercury_shell_ssh_public_key }}"

- name: ensure arvados keep s3 bucket exists
  tags:
    - s3
  delegate_to: localhost
  aws_s3:
    rgw: true
    s3_url: "{{ arvados_cluster_keep_s3_endpoint }}"
    aws_access_key: "{{ arvados_cluster_keep_s3_access_key }}"
    aws_secret_key: "{{ arvados_cluster_keep_s3_secret_key }}"
    bucket: "{{ arvados_cluster_keep_s3_bucket }}"
    permission: private
    mode: create

- name: set consul-template keys for cluster in consul kv
  delegate_to: localhost
  tags:
    - slurm
    - munge
    - consul_kv
  consul_kv:
    key: "{{ arvados_cluster_consul_template_path }}/{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    token: "{{ arvados_cluster_consul_template_token }}"
    host: "{{ arvados_cluster_consul_template_host }}"
  with_items:
    - key: munge_key_base64
      value: "{{ arvados_cluster_munge_key_base64 }}"
    - key: slurm_conf
      value: "{{ lookup('template', 'slurm.conf.j2') }}"
    - key: cgroup_conf
      value: "{{ lookup('template', 'cgroup.conf.j2') }}"
    - key: arvados_cluster_api_host
      value: "{{ arvados_cluster_api_host }}"
    - key: arvados_keep_config_yaml
      value: "{{ lookup('template', 'arvados-keep-config.yaml.j2') }}"
    - key: arvados_keep_blob_signing_key
      value: "{{ arvados_cluster_keep_blob_signing_key }}"
    - key: arvados_keep_data_manager_api_token
      value: "{{ arvados_cluster_data_manager_api_token }}"
    - key: arvados_keep_s3_access_key
      value: "{{ arvados_cluster_keep_s3_access_key }}"
    - key: arvados_keep_s3_secret_key
      value: "{{ arvados_cluster_keep_s3_secret_key }}"
  when: "not 'image-building' in group_names"

- name: set ping_secret for each node in consul kv
  delegate_to: localhost
  tags:
    - consul_kv
  consul_kv:
    key: "{{ arvados_cluster_consul_template_path }}/compute-node/{{ item }}/ping_secret"
    value: "{{ arvados_cluster_root_key | pbkdf2_hmac(item, 32) | b36encode }}"
    state: present
    token: "{{ arvados_cluster_consul_template_token }}"
    host: "{{ arvados_cluster_consul_template_host }}"
  with_items:
    - "{{ arvados_cluster_GROUP_compute_node_names }}"
  when: "not 'image-building' in group_names"

- name: set uuid for each node in consul kv
  delegate_to: localhost
  tags:
    - consul_kv
  consul_kv:
    key: "{{ arvados_cluster_consul_template_path }}/compute-node/{{ item }}/uuid"
    value: "{{ arvados_cluster_id }}-7ekkf-{{ item | hash('md5') | truncate(15, True, '') }}"
    state: present
    token: "{{ arvados_cluster_consul_template_token }}"
    host: "{{ arvados_cluster_consul_template_host }}"
  with_items:
    - "{{ arvados_cluster_GROUP_compute_node_names }}"
  when: "not 'image-building' in group_names"


