# Copyright (c) 2017 Genome Research Ltd.
#
# Author: Joshua C. Randall <jcrandall@alum.mit.edu>
#
# This file is part of hgi-systems.
#
# hgi-systems is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#
---
# file: roles/arvados-sso/tasks/main.yml


################################################################################
# prepare directories
################################################################################
- name: create directories within arvados data dir
  become: yes
  file:
    path: "{{ arvados_sso_data_dir }}/{{ item }}"
    state: directory
  with_items:
    - postgresql
    - arvados-sso

- name: ensure /var/www exists
  become: yes
  file:
    path: /var/www
    state: directory

- name: create etc-postgresql dir
  become: yes
  file:
    path: "{{ arvados_sso_data_dir }}/etc-postgresql"
    state: directory
    owner: postgres
    group: postgres

- name: link etc-postgresql dir to /etc/postgresql
  become: yes
  file:
    path: /etc/postgresql
    src: "{{ arvados_sso_data_dir }}/etc-postgresql"
    state: link

- name: link arvados-sso dir to arvados data dir
  become: yes
  file:
    path: /var/www/arvados-sso
    src: "{{ arvados_sso_data_dir }}/arvados-sso"
    state: link

- name: install arvados sso prerequisites including postgresql
  become: yes
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ all_apt_cache_valid_time }}"
  with_items:
    - "postgresql={{ arvados_sso_postgresql_package_version }}"
    - bison
    - build-essential
    - gettext
    - libcurl3
    - libcurl3-gnutls
    - libcurl4-openssl-dev
    - libpcre3-dev
    - libreadline-dev
    - libssl-dev
    - libxslt1.1
    - python-psycopg2
    - zlib1g-dev

- name: delete default main postgresql cluster
  become: yes
  command: "pg_dropcluster --stop {{ arvados_sso_postgresql_version }} main"
  args:
    removes: /etc/postgresql/{{ arvados_sso_postgresql_version }}/main

- name: create postgresql cluster
  become: yes
  command: "pg_createcluster -u postgres -d {{ arvados_sso_data_dir }}/postgresql/{{ arvados_sso_postgresql_version }}/arvados_sso -p 5432 --start {{ arvados_sso_postgresql_version }} arvados_sso"
  args:
    creates: /etc/postgresql/{{ arvados_sso_postgresql_version }}/arvados_sso
  register: arvados_sso_REGISTER_configure_postgresql

- name: create postgresql user for arvados sso
  become: yes
  become_user: postgres
  postgresql_user:
    name: "{{ arvados_cluster_db_user_sso }}"
    password: "{{ arvados_cluster_db_password_sso }}"
    encrypted: yes
    role_attr_flags: "NOSUPERUSER,NOCREATEROLE"

- name: create arvados sso database
  become: yes
  become_user: postgres
  postgresql_db:
    name: "{{ arvados_cluster_db_name_sso }}"
    template: template0
    encoding: UTF8
    owner: "{{ arvados_cluster_db_user_sso }}"

- name: ensure /usr/local/src directory exists
  become: yes
  file:
    path: /usr/local/src
    state: directory
    owner: "{{ ansible_user }}"
    
- name: download ruby source archive
  get_url:
    url: http://cache.ruby-lang.org/pub/ruby/2.3/ruby-{{ arvados_sso_ruby_version }}.tar.gz
    dest: /usr/local/src/ruby-{{ arvados_sso_ruby_version }}.tar.gz
    checksum: sha256:98e18f17c933318d0e32fed3aea67e304f174d03170a38fd920c4fbe49fec0c3
    

- name: expand ruby source archive
  unarchive:
    src: /usr/local/src/ruby-{{ arvados_sso_ruby_version }}.tar.gz
    dest: /usr/local/src
    remote_src: true
    creates: /usr/local/src/ruby-{{ arvados_sso_ruby_version }}

- name: configure ruby source
  command: ./configure --disable-install-rdoc
  args:
    creates: /usr/local/src/ruby-{{ arvados_sso_ruby_version }}/Makefile
    chdir: /usr/local/src/ruby-{{ arvados_sso_ruby_version }}

- name: build ruby
  command: make
  args:
    creates: /usr/local/src/ruby-{{ arvados_sso_ruby_version }}/ruby
    chdir: /usr/local/src/ruby-{{ arvados_sso_ruby_version }}

- name: install ruby
  become: yes
  command: make install
  args:
    creates: /usr/local/bin/ruby
    chdir: /usr/local/src/ruby-{{ arvados_sso_ruby_version }}

- name: install bundler
  become: yes
  command: gem install bundler
  args:
    creates: /usr/local/bin/bundler

- name: add passenger apt signing key
  become: yes
  apt_key: 
    keyserver: "{{ pgp_keyserver_url }}"
    id: 561F9B9CAC40B2F7

- name: add arvados apt repository
  become: yes
  apt_repository: 
    repo: "deb https://oss-binaries.phusionpassenger.com/apt/passenger {{ ansible_distribution_release }} main"
    state: present

- name: install nginx and passenger
  become: yes
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ all_apt_cache_valid_time }}"
  with_items:
    - nginx-extras
    - passenger

- name: make /var/www owned by www-data
  become: yes
  file: 
    path: /var/www
    owner: www-data

- name: activate passenger in nginx configuration
  become: yes
  blockinfile:
    path: /etc/nginx/nginx.conf
    insertafter: "http {"
    content: |
      include /etc/nginx/passenger.conf;
  notify:
    - restart nginx

- name: ensure nginx has restarted before installing arvados sso
  meta: flush_handlers

- name: install arvados sso server
  become: yes
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ all_apt_cache_valid_time }}"
  with_items:
    - arvados-sso-server

- name: configure arvados
  become: yes
  template:
    src: "{{ item }}.j2"
    dest: "/etc/arvados/sso/{{ item }}"
  with_items:
    - application.yml
    - database.yml
    - production.rb
  notify:
    - reconfigure arvados-sso-server

- name: create app secret generation script
  become: yes
  template:
    src: "generate-sso-app-secret.rb.j2"
    dest: "{{ arvados_sso_generate_app_secret_script }}"
    mode: 0700
    owner: www-data
  notify:
    - generate sso app secret

- name: assign mercury uuid script
  become: yes
  template:
    src: "assign-mercury-uuid.rb.j2"
    dest: "{{ arvados_sso_assign_mercury_uuid_script }}"
    mode: 0700
    owner: www-data
  notify:
    - assign mercury uuid

- name: copy ssl certificate
  become: yes
  copy:
    content: "{{ arvados_sso_cert }}"
    dest: "{{ arvados_sso_cert_file }}"
    owner: root
    mode: 0600
  notify:
   - restart nginx

- name: copy ssl key
  become: yes
  copy:
    content: "{{ arvados_sso_key }}"
    dest: "{{ arvados_sso_key_file }}"
    owner: root
    mode: 0600
  notify:
   - restart nginx

- name: configure nginx for arvados-sso
  become: yes
  template:
    src: "arvados-sso.conf.j2"
    dest: /etc/nginx/conf.d/arvados-sso.conf
    mode: 0700
    owner: www-data
  notify:
   - restart nginx

