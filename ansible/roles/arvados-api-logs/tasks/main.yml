# Copyright (c) 2017 Genome Research Ltd.
#
# Author: Joshua C. Randall <jcrandall@alum.mit.edu>
#
# This file is part of hgi-systems.
#
# hgi-systems is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#
---

################################################################################
# prepare directories
################################################################################
- name: ensure /var/www exists
  become: yes
  file:
    path: /var/www
    state: directory

################################################################################
# arvados-api
################################################################################
- name: install arvados api server prerequisites
  become: yes
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ all_apt_cache_valid_time }}"
  with_items:
    - bison
    - build-essential
    - gettext
    - libcurl3
    - libcurl3-gnutls
    - libcurl4-openssl-dev
    - libpcre3-dev
    - libreadline-dev
    - libssl-dev
    - libxslt1.1
    - postgresql-client-common
    - "postgresql-client-{{ arvados_master_postgresql_client_package_version }}"
    - python-psycopg2
    - zlib1g-dev

- name: set ownership of arvados-api dir
  become: yes
  file:
    path: "{{ arvados_master_api_data_dir }}/arvados-api"
    state: directory
    owner: www-data
    group: www-data
    recurse: yes

- name: ensure /usr/local/src directory exists
  become: yes
  file:
    path: /usr/local/src
    state: directory
    owner: "{{ ansible_user }}"

- name: download ruby source archive
  get_url:
    url: http://cache.ruby-lang.org/pub/ruby/2.3/ruby-{{ arvados_master_ruby_version }}.tar.gz
    dest: /usr/local/src/ruby-{{ arvados_master_ruby_version }}.tar.gz
    checksum: sha256:98e18f17c933318d0e32fed3aea67e304f174d03170a38fd920c4fbe49fec0c3

- name: expand ruby source archive
  unarchive:
    src: /usr/local/src/ruby-{{ arvados_master_ruby_version }}.tar.gz
    dest: /usr/local/src
    remote_src: true
    creates: /usr/local/src/ruby-{{ arvados_master_ruby_version }}

- name: configure ruby source
  command: ./configure --disable-install-rdoc
  args:
    creates: /usr/local/src/ruby-{{ arvados_master_ruby_version }}/Makefile
    chdir: /usr/local/src/ruby-{{ arvados_master_ruby_version }}

- name: build ruby
  command: make
  args:
    creates: /usr/local/src/ruby-{{ arvados_master_ruby_version }}/ruby
    chdir: /usr/local/src/ruby-{{ arvados_master_ruby_version }}

- name: install ruby
  become: yes
  command: make install
  args:
    creates: /usr/local/bin/ruby
    chdir: /usr/local/src/ruby-{{ arvados_master_ruby_version }}

- name: install bundler
  become: yes
  command: gem install bundler
  args:
    creates: /usr/local/bin/bundler

- name: add passenger apt signing key
  become: yes
  apt_key:
    keyserver: "{{ pgp_keyserver_url }}"
    id: 561F9B9CAC40B2F7

- name: add arvados apt repository
  become: yes
  apt_repository:
    repo: "deb https://oss-binaries.phusionpassenger.com/apt/passenger {{ ansible_distribution_release }} main"
    state: present

# set sysctl params for nginx
- name: tune sysctl parameters for nginx
  become: yes
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  with_items:
    - name: fs.file-max
      value: 11934410
    - name: kernel.msgmnb
      value: 65536
    - name: kernel.msgmax
      value: 65536
    - name: net.core.netdev_max_backlog
      value: 250000
    - name: net.core.optmem_max
      value: 67108864
    - name: net.core.rmem_max
      value: 67108864
    - name: net.core.somaxconn
      value: "{{ arvados_master_sysctl_somaxconn }}"
    - name: net.core.wmem_max
      value: 67108864
    - name: net.ipv4.ip_local_port_range
      value: 1024 65535
    - name: net.ipv4.tcp_congestion_control
      value: htcp
    - name: net.ipv4.tcp_dsack
      value: 0
    - name: net.ipv4.tcp_fin_timeout
      value: 5
    - name: net.ipv4.tcp_keepalive_intvl
      value: 15
    - name: net.ipv4.tcp_keepalive_probes
      value: 5
    - name: net.ipv4.tcp_max_syn_backlog
      value: 200000
    - name: net.ipv4.tcp_max_tw_buckets
      value: 4000000
    - name: net.ipv4.tcp_mem
      value: 67108864 67108864 67108864
    - name: net.ipv4.tcp_retries2
      value: 10
    - name: net.ipv4.tcp_rfc1337
      value: 1
    - name: net.ipv4.tcp_rmem
      value: 4096 16777216 67108864
    - name: net.ipv4.tcp_sack
      value: 0
    - name: net.ipv4.tcp_wmem
      value: 4096 16777216 67108864
    - name: net.ipv4.tcp_window_scaling
      value: 1
    - name: vm.min_free_kbytes
      value: 204800
    - name: vm.page-cluster
      value: 20
    - name: vm.swappiness
      value: 10
  loop_control:
    label: "{{ item.name }}"

- name: install nginx and passenger
  become: yes
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ all_apt_cache_valid_time }}"
  with_items:
    - nginx-extras
    - passenger
  notify:
    - restart nginx

- name: create systemd drop-in directory for nginx
  become: yes
  file:
    path: /etc/systemd/system/nginx.service.d/
    state: directory

- name: add systemd drop-in for nginx to create required passenger run directories
  become: yes
  copy:
    src: passenger-run-directories.conf
    dest: /etc/systemd/system/nginx.service.d/10-passenger-run-directories.conf
  register: nginx_service_drop_in

- name: reload systemd to apply nginx service changes
  become: yes
  systemd:
    daemon_reload: yes
  when: nginx_service_drop_in.changed

- name: install haproxy
  become: yes
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ all_apt_cache_valid_time }}"
  with_items:
    - haproxy
  notify:
    - restart haproxy
    - restart rsyslog

- name: create systemd nginx service directory
  become: yes
  file:
    path: /etc/systemd/system/nginx.service.d
    state: directory

- name: configure systemd nginx service override (number of files limit, etc)
  become: yes
  template:
    src: systemd-nginx-override.conf.j2
    dest: /etc/systemd/system/nginx.service.d/override.conf
  notify:
    - restart nginx

- name: make /var/www owned by www-data
  become: yes
  file:
    path: /var/www
    owner: www-data

- name: set shell for www-data user (required for git repo access using jobs api)
  become: yes
  user:
    name: www-data
    shell: /bin/bash

- name: remove worker_connections from nginx events section
  become: yes
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: '^\s*worker_connections\s'
    state: absent
  notify:
    - restart nginx

- name: configure nginx worker limits
  become: yes
  blockinfile:
    path: /etc/nginx/nginx.conf
    marker: "# {mark} ANSIBLE MANAGED WORKER LIMITS BLOCK"
    insertafter: '^\s*pid'
    content: |
      include /etc/nginx/worker_limits.conf;
  notify:
    - restart nginx

- name: configure nginx events section
  become: yes
  blockinfile:
    path: /etc/nginx/nginx.conf
    marker: "# {mark} ANSIBLE MANAGED EVENTS BLOCK"
    insertafter: 'events\s*{'
    content: |
      include /etc/nginx/events.conf;
  notify:
    - restart nginx

- name: add additional includes to nginx http configuration
  become: yes
  blockinfile:
    path: /etc/nginx/nginx.conf
    insertafter: 'http\s*{'
    content: |
      include /etc/nginx/passenger.conf;
      include /etc/nginx/passenger_settings.conf;
      include /etc/nginx/netdata_logging.conf;
      include /etc/nginx/haproxy_queues.conf;
  notify:
    - restart nginx

- name: add arvados-api-backend nginx logging to netdata web_log.conf
  become: yes
  blockinfile:
    path: /etc/netdata/python.d/web_log.conf
    content: |
      nginx_arvados_api_backend:
        name: 'arvados api backend'
        path: '/var/log/nginx/arvados-api-backend-access.log'
        categories:
          # API discovery
          discovery                       : '^/discovery'
          # Permission and authentication
          api_client_authorizations       : '^/arvados/v1/api_client_authorizations'
          api_clients                     : '^/arvados/v1/api_clients'
          groups                          : '^/arvados/v1/groups'
          users                           : '^/arvados/v1/users'
          # System resources
          keep_services                   : '^/arvados/v1/keep_services'
          links                           : '^/arvados/v1/links'
          logs                            : '^/arvados/v1/logs'
          nodes                           : '^/arvados/v1/nodes'
          virtual_machines                : '^/arvados/v1/virtual_machines'
          # Data management
          collections                     : '^/arvados/v1/collections'
          repositories                    : '^/arvados/v1/repositories'
          # Container engine
          container_requests              : '^/arvados/v1/container_requests'
          containers                      : '^/arvados/v1/containers'
          workflows                       : '^/arvados/v1/workflows'
  notify:
    - restart netdata

- name: configure nginx include files
  become: yes
  template:
    src: "{{ item }}.conf.j2"
    dest: "/etc/nginx/{{ item }}.conf"
  notify:
    - restart nginx
  with_items:
    - passenger_settings
    - events
    - worker_limits
    - netdata_logging
    - haproxy_queues

- name: configure haproxy
  become: yes
  template:
    src: "haproxy.cfg.j2"
    dest: "/etc/haproxy/haproxy.cfg"
  notify:
   - restart haproxy
   - restart rsyslog

- name: add haproxy logging to netdata haproxy.conf
  become: yes
  blockinfile:
    path: /etc/netdata/python.d/haproxy.conf
    content: |
      via_socket:
        socket: '/var/run/haproxy/admin.sock'
  notify:
    - restart netdata

- name: add netdata user to haproxy group
  become: yes
  user:
    name: netdata
    append: yes
    groups:
      - haproxy
  notify:
    - restart netdata

- name: add PASSENGER_INSTANCE_REGISTRY_DIR env var to root .bash_profile
  become: yes
  lineinfile:
    path: /root/.bash_profile
    line: "export PASSENGER_INSTANCE_REGISTRY_DIR=/var/run/nginx/passenger"
    regexp: '^\s*export\s*PASSENGER_INSTANCE_REGISTRY_DIR\s*='
    create: yes
    state: present

- name: ensure nginx has restarted before installing arvados api
  meta: flush_handlers

- name: install arvados api server
  become: yes
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ all_apt_cache_valid_time }}"
  with_items:
    - arvados-api-server
  register: arvados_master_REGISTER_install_api_server

- name: create directories for arvados
  become: yes
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ arvados_master_git_repositories_dir }}"
    - /var/www/arvados-api/current/tmp/cache
    - /var/run/nginx/passenger
  register: arvados_master_REGISTER_create_dirs

- name: arvados conf files
  become: yes
  template:
    src: "{{ item }}.j2"
    dest: "/etc/arvados/api/{{ item }}"
  with_items:
    - application.yml
    - database.yml
  register: arvados_master_REGISTER_conf_files
  notify:
    - restart crunch-dispatch-pipelines
    - restart crunch-dispatch-jobs

- name: dpkg-reconfigure arvados-api-server (this also initially creates the database)
  become: yes
  command: dpkg-reconfigure arvados-api-server
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: >-
    arvados_master_REGISTER_install_api_server.changed or
    arvados_master_REGISTER_create_dirs.changed or
    arvados_master_REGISTER_conf_files.changed

- name: copy api token files
  become: yes
  copy:
    content: "{{ item.token }}"
    dest: "{{ item.file }}"
    owner: www-data
    mode: 0600
  with_items:
    - { token: "{{ arvados_cluster_superuser_api_token }}", file: "{{ arvados_master_superuser_token_file }}" }
    - { token: "{{ arvados_cluster_crunch_dispatcher_api_token }}", file: "{{ arvados_master_crunch_dispatcher_token_file }}" }
    - { token: "{{ arvados_master_data_manager_api_token }}", file: "{{ arvados_master_data_manager_api_token_file }}" }
  register: arvados_master_api_token_files

# FIXME remove after bugfix resolved: https://dev.arvados.org/issues/12671
- name: copy custom create_superuser_token_hgi.rb script as upstream script is broken (12671)
  become: yes
  copy:
    src: create_superuser_token_hgi.rb
    dest: /var/www/arvados-api/current/script/create_superuser_token_hgi.rb
    owner: www-data
    mode: 0755

- name: create api tokens from files (requires functional DB)
  become: yes
  become_user: www-data
  # FIXME: change back to ./script/create_superuser_token.rb once bux 12671 is resolved
  shell: "bundle exec ./script/create_superuser_token_hgi.rb $(cat {{ item }})"
  args:
    executable: /bin/sh
    chdir: /var/www/arvados-api/current
  environment:
    HOME: /var/www
    RAILS_ENV: production
  with_items:
    - "{{ arvados_master_superuser_token_file }}"
    - "{{ arvados_master_crunch_dispatcher_token_file }}"
    - "{{ arvados_master_data_manager_api_token_file }}"
  when: arvados_master_api_token_files.changed

- name: copy ssl certificate
  become: yes
  copy:
    content: "{{ arvados_master_cert }}"
    dest: "{{ arvados_master_cert_file }}"
    owner: root
    mode: 0600
  notify:
   - restart nginx

- name: copy ssl key
  become: yes
  copy:
    content: "{{ arvados_master_key }}"
    dest: "{{ arvados_master_key_file }}"
    owner: root
    mode: 0600
  notify:
   - restart nginx

- name: configure nginx for arvados-api
  become: yes
  template:
    src: "arvados-api.conf.j2"
    dest: /etc/nginx/conf.d/arvados-api.conf
    mode: 0700
    owner: www-data
  notify:
   - restart nginx

- name: create trusted workbench api client script
  become: yes
  template:
    src: "create-workbench-api-client.rb.j2"
    dest: "{{ arvados_master_create_workbench_api_client_script }}"
    mode: 0700
    owner: www-data
  register: arvados_master_workbench_api_client_script

- name: run script to create trusted workbench api client
  become: yes
  become_user: www-data
  command: bundle exec rails runner "{{ arvados_master_create_workbench_api_client_script }}"
  args:
    chdir: /var/www/arvados-api/current
  environment:
    HOME: /var/www
    RAILS_ENV: production
  when: arvados_master_workbench_api_client_script.changed

- name: create mercury admin user script
  become: yes
  template:
    src: "create-mercury-admin-user.rb.j2"
    dest: "{{ arvados_master_create_mercury_admin_user_script }}"
    mode: 0700
    owner: www-data
  register: arvados_master_mercury_admin_user_script

- name: create mercury admin user
  become: yes
  become_user: www-data
  command: bundle exec rails runner "{{ arvados_master_create_mercury_admin_user_script }}"
  args:
    chdir: /var/www/arvados-api/current
  environment:
    HOME: /var/www
    RAILS_ENV: production
  when: arvados_master_mercury_admin_user_script.changed

- name: setup logrotate to rotate API logs
  become: yes
  import_role:
    name: wtsi-hgi.ansible-logrotate
  vars:
    logrotate_scripts:
      - name: arvados_api_db
        path: "{{ arvados_master_api_data_dir }}/arvados-api/shared/log/*.log"
        options:
          - compress
          - copytruncate
          - hourly
          - missingok
          - size 1G
          - rotate 36

- name: create arvados passenger maintenance scripts for cron to run
  become: yes
  template:
    src: "{{ item }}.j2"
    dest: "/var/www/arvados-api/current/script/{{ item }}"
    mode: 0750
    owner: www-data
  with_items:
    - arvados_api_passenger_restart.sh

- name: enable arvados_api_passenger_restart.sh cron job
  become: yes
  cron:
    state: present
    name: "{{ item.name }}"
    cron_file: "/etc/cron.d/{{ item.name }}"
    minute: "0"
    hour: "6"
    day: "*"
    month: "*"
    weekday: "*"
    user: root
    job: "{{ item.job }}"
  with_items:
    - name: arvados_api_passenger_restart
      job: /var/www/arvados-api/current/script/arvados_api_passenger_restart.sh

- name: create arvados db maintenance scripts for cron to run
  become: yes
  template:
    src: "{{ item }}.j2"
    dest: "/var/www/arvados-api/current/script/{{ item }}"
    mode: 0750
    owner: www-data
  with_items:
    - delete_old_container_logs.sh
    - delete_old_job_logs.sh

- name: enable arvados db:delete_old_container_logs and db:deleta_old_job_logs cron jobs
  become: yes
  cron:
    state: present
    name: "{{ item.name }}"
    cron_file: "/etc/cron.d/{{ item.name }}"
    minute: "0"
    hour: "*/2"
    day: "*"
    month: "*"
    weekday: "*"
    user: www-data
    job: "{{ item.job }}"
  with_items:
    - name: arvados_db_delete_old_container_logs
      job: /var/www/arvados-api/current/script/delete_old_container_logs.sh
    - name: arvados_db_delete_old_job_logs
      job: /var/www/arvados-api/current/script/delete_old_job_logs.sh

- name: copy script to kill fat passenger tasks
  become: yes
  copy:
    src: files/arvados_api_fat_passenger_killer.sh
    dest: /var/www/arvados-api/current/script/arvados_api_fat_passenger_killer.sh
    mode: 0770

- name: set cron job to kill fat passenger tasks
  become: yes
  cron:
    state: present
    name: "arvados_api_fat_passenger_killer"
    user: root
    cron_file: "/etc/cron.d/arvados_api_fat_passenger_killer"
    minute: "*"
    hour: "*"
    day: "*"
    job: "/var/www/arvados-api/current/script/arvados_api_fat_passenger_killer.sh"
