---

- name: import aptly apt repository key
  become: yes
  apt_key:
    keyserver: pool.sks-keyservers.net
    id: ED75B5A4483DA07C

- name: add aptly debian repository
  become: yes
  apt_repository:
    # "Please don't worry about squeeze part in repo name: aptly package should work on Debian squeeze+, Ubuntu 10.0+."
    # (source: https://www.aptly.info/download/)
    repo: deb http://repo.aptly.info/ squeeze main
    update_cache: yes

- name: install apt requirements
  become: yes
  apt:
    name: "{{ item }}"
    update_cache: yes
    cache_valid_time: "{{ aptly_apt_cache_valid_time }}"
  with_items:
    - aptly
    - nginx

- name: create aptly configuration
  become: yes
  template:
    src: aptly.conf.j2
    dest: /etc/aptly.conf
  notify: restart_aptly_api

- name: ensure aptly configuration does not exist in home directory (overrides /etc configuration)
  become: yes
  file:
    path: "{{ ansible_env.HOME }}/.aptly.conf"
    state: absent

- name: configure aptly REST API systemd service
  become: yes
  template:
    src: "aptly-api.service.j2"
    dest: "/etc/systemd/system/{{ aptly_api_service_name }}.service"
  notify: restart_aptly_api

- name: start aptly REST api
  become: yes
  systemd:
    name: "{{ aptly_api_service_name }}"
    state: started
    daemon_reload: yes

- name: check if aptly repo has been created
  become: yes
  aptly_repo:
    name: "{{ item.name }}"
    options: "{{ item.options }}"     # TODO: Does this still work if `options` are not defined?
    aptly_binary: "{{ aptly_aptly_binary_location }}"

- name: copy ssl certificate
  become: yes
  copy:
    content: "{{ aptly_api_cert }}"
    dest: "{{ aptly_api_cert_file }}"
    owner: root
    mode: 0600
  notify:
   - restart_nginx

- name: copy ssl key
  become: yes
  copy:
    content: "{{ aptly_api_key }}"
    dest: "{{ aptly_api_key_file }}"
    owner: root
    mode: 0600
  notify:
   - restart_nginx

- name: configure nginx
  become: yes
  template:
    src: "aptly-api.nginx.conf.j2"
    dest: /etc/nginx/conf.d/aptly-api.nginx.conf
    mode: 0700
    owner: www-data
  notify:
   - restart_nginx



# TODO: Configure Aptly
# TODO: nginx proxy with basic auth
# TODO: nginx serve published packages




# Client: https://github.com/sepulworld/aptly_cli
