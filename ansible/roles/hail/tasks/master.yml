---

- name: install apt prerequisites
  become: yes
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ hail_apt_cache_valid_time }}"
  with_items:
    - nginx

- name: create data directory for Jupyter user
  become: yes
  file:
    path: "{{ hail_master_data_dir }}"
    state: directory
    mode: 0700
    owner: "{{ hail_user }}"
    group: "{{ hail_user }}"

- name: check if /data is a symlink
  become: yes
  stat:
    path: "/data"
    follow: no
  ignore_errors: yes
  register: data_stat

- name: unmount /data if it is not a link (TODO remove after migration)
  become: yes
  command: umount /data
  when: >-
    ('stat' in data_stat) and 
    (data_stat.stat.islnk is defined) and 
    (not tutorials_stat.stat.islnk)
  
- name: link /data to data dir for convenience
  become: yes
  file:
    src: "{{ hail_master_data_dir }}"
    dest: "/data"
    state: link
  when: >-
    ('stat' in data_stat) and 
    (data_stat.stat.islnk is not defined)

- name: check if tutorials is a symlink
  become: yes
  stat:
    path: "{{ hail_master_data_dir }}/tutorials"
    follow: no
  ignore_errors: yes
  register: tutorials_stat

- name: remove tutorials if it is a symlink
  become: yes
  file:
    path: "{{ hail_master_data_dir }}/tutorials"
    state: absent
  when: >-
    ('stat' in tutorials_stat) and 
    (tutorials_stat.stat.islnk is defined) and 
    tutorials_stat.stat.islnk

- name: initially copy hail tutorials into data dir
  become: yes
  command: rsync -az "{{ hail_prefix_dir }}/python/hail/docs/tutorials/" "{{ hail_master_data_dir }}/tutorials"
  creates:  "{{ hail_master_data_dir }}/tutorials"

- name: copy ssl certificate
  become: yes
  copy:
    content: "{{ hail_ssl_cert }}"
    dest: "{{ hail_ssl_cert_file }}"
    owner: root
    mode: 0600
  notify:
   - restart nginx

- name: copy ssl key
  become: yes
  copy:
    content: "{{ hail_ssl_key }}"
    dest: "{{ hail_ssl_key_file }}"
    owner: root
    mode: 0600
  notify:
   - restart nginx

- name: configure nginx for hail
  become: yes
  template:
    src: "hail.conf.j2"
    dest: /etc/nginx/conf.d/hail.conf
    mode: 0700
    owner: www-data
  notify:
   - restart nginx

- name: set configuration for Jupyter
  become: yes
  template:
    src: jupyter_notebook_config.py.j2
    dest: "{{ hail_jupyter_config_file }}"
    owner: "{{ hail_user }}"
    mode: 0600
  notify: restart hail

- name: setup systemd entry to control Hail
  become: yes
  template:
    src: hail.service.j2
    dest: "{{ hail_systemd_service_dir }}/hail.service"
  notify: restart hail
  register: hail_service

- name: reload systemd
  become: yes
  command: systemctl daemon-reload
  when: hail_service.changed

- name: start hail service
  become: yes
  service:
    name: hail
    state: started
  
- name: setup s3 to backup hail data 
  import_role:
    name: s3-backup
  vars:
    s3_backup_source_dir: "{{ hail_master_data_dir }}"
    s3_backup_dest_url: "s3://{{ hail_backup_s3_host }}/{{ hail_backup_s3_backup_bucket }}/{{ hail_data_backup_path }}"
    s3_backup_s3_host: "{{ hail_backup_s3_host }}"
    s3_backup_s3_access_key: "{{ hail_backup_s3_access_key }}"
    s3_backup_s3_secret_key: "{{ hail_backup_s3_secret_key }}"
    s3_backup_s3_bucket: "{{ hail_backup_s3_backup_bucket }}"

